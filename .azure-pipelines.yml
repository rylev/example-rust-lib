trigger:
  - "pr"
  - "master"

jobs:
  - job: format_check
    displayName: Check that the code is formatted
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - template: .azure-pipelines/install-rust.yml
      parameters:
        rust_version: stable
    - script: rustup component add rustfmt
      displayName: "Add rustfmt"
    - script: cargo fmt --all -- --check
      displayName: "Check formatting"
  - job: testing
    displayName: Check that the code builds and the tests pass
    strategy:
      matrix:
        Linux:
          vmImage: ubuntu-16.04
        MacOS:
          vmImage: macOS-10.13
        Windows:
          vmImage: vs2017-win2016
    pool:
      vmImage: $(vmImage)
    steps:
    - template: .azure-pipelines/install-rust.yml
      parameters:
        rust_version: stable
    - script: cargo test
      displayName: "Run test"

  - job: documentation
    displayName: 'Deploy API Documentation'
    pool:
      vmImage: 'Ubuntu 16.04'
    dependsOn:
      - format_check
      - testing
    steps:
    - template: .azure-pipelines/install-rust.yml
      parameters:
        rust_version: stable
    - script: |
        cargo doc --all --no-deps
        cp -R target/doc '$(Build.BinariesDirectory)'
      displayName: 'Generate Documentation'
    - script: |
        set -e

        git init
        git config user.name 'Deployment Bot (from Azure Pipelines)'
        git config user.email 'deploy@example.com'
        git config --global credential.helper 'store --file ~/.my-credentials'
        git remote add origin https://github.com/rylev/example-rust-lib
        git checkout -b gh-pages
        git add .
        git commit -m 'Deploy documentation'
        git push -f origin gh-pages
      env:
        GITHUB_TOKEN: $(githubPersonalToken)
      workingDirectory: '$(Build.BinariesDirectory)'
      displayName: 'Deploy Documentation'
